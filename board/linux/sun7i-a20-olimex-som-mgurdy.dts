/*
 * Copyright 2015 - Marcus Cooper <codekipper@gmail.com>
 * Copyright 2015 - Karsten Merker <merker@debian.org>
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;
#include "sun7i-a20.dtsi"
#include "sunxi-common-regulators.dtsi"

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/interrupt-controller/irq.h>

/ {
	model = "Olimex A20-Olimex-SOM-EVB";
	compatible = "olimex,a20-olimex-som-evb", "allwinner,sun7i-a20";

	aliases {
		serial0 = &uart0;
		spi0 = &spi1;
		spi1 = &spi2;
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

	leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&led_pins_olimex_som_evb>;

		green {
			label = "a20-olimex-som-evb:green:usr";
			gpios = <&pio 7 2 GPIO_ACTIVE_HIGH>; /* PH2 */
			default-state = "on";
			linux,default-trigger = "mmc0";
		};

		string1 {
			label = "string1";
			gpios = <&pio 7 24 GPIO_ACTIVE_HIGH>; /* PH24 */
			linux,default-trigger = "default-on";
		};

		string2 {
			label = "string2";
			gpios = <&pio 7 25 GPIO_ACTIVE_HIGH>; /* PH25 */
			linux,default-trigger = "default-on";
		};

		string3 {
			label = "string3";
			gpios = <&pio 7 26 GPIO_ACTIVE_HIGH>; /* PH26 */
			linux,default-trigger = "default-on";
		};
	};

rotary0: rotary@0 {
		 pinctrl-names = "default";
		 pinctrl-0 = <&rotary_pins_olimex_som_evb>;

		 compatible = "rotary-encoder";
		 gpios = <&pio 7 13 GPIO_ACTIVE_HIGH>, <&pio 7 14 GPIO_ACTIVE_HIGH>; /* PH13, PH14 */
		 linux,axis = <0>; /* REL_X */
		 rotary-encoder,relative-axis;
	 };

	 gpio_keys {
		 compatible = "mgurdy-gpio-keys";
		 #address-cells = <1>;
		 #size-cells = <0>;
		 pinctrl-names = "default";
		 pinctrl-0 = <&gpio_btn_pins_olimex_som_evb>;

		 button0 {
			 label = "Rotary Button";
			 mgurdy,state-code = <100>;
			 mgurdy,short-code = <101>;
			 mgurdy,long-code = <102>;
			 gpios = <&pio 7 8 GPIO_ACTIVE_LOW>; /* PH8 */
		 };

		 button1 {
			 label = "UI BTN1";
			 mgurdy,state-code = <103>;
			 mgurdy,short-code = <104>;
			 mgurdy,long-code = <105>;
			 gpios = <&pio 7 9 GPIO_ACTIVE_LOW>; /* PH9 */
		 };

		 button2 {
			 label = "UI BTN2";
			 mgurdy,state-code = <106>;
			 mgurdy,short-code = <107>;
			 mgurdy,long-code = <108>;
			 gpios = <&pio 7 10 GPIO_ACTIVE_LOW>; /* PH10 */
		 };

		 button3 {
			 label = "UI BTN3";
			 mgurdy,state-code = <109>;
			 mgurdy,short-code = <110>;
			 mgurdy,long-code = <111>;
			 gpios = <&pio 7 11 GPIO_ACTIVE_LOW>; /* PH11 */
		 };

		 button4 {
			 label = "UI BTN4";
			 mgurdy,state-code = <112>;
			 mgurdy,short-code = <113>;
			 mgurdy,long-code = <114>;
			 gpios = <&pio 7 12 GPIO_ACTIVE_LOW>; /* PH12 */
		 };

		 string1 {
			 label = "String1 BTN";
			 mgurdy,state-code = <115>;
			 mgurdy,short-code = <116>;
			 mgurdy,long-code = <117>;
			 gpios = <&pio 7 15 GPIO_ACTIVE_LOW>; /* PH15 */
		 };

		 string2 {
			 label = "String2 BTN";
			 mgurdy,state-code = <118>;
			 mgurdy,short-code = <119>;
			 mgurdy,long-code = <120>;
			 gpios = <&pio 7 16 GPIO_ACTIVE_LOW>; /* PH16 */
		 };

		 string3 {
			 label = "String3 BTN";
			 mgurdy,state-code = <121>;
			 mgurdy,short-code = <122>;
			 mgurdy,long-code = <123>;
			 gpios = <&pio 7 17 GPIO_ACTIVE_LOW>; /* PH17 */
		 };

		 stringmod1 {
			 label = "String Mod1 BTN";
			 mgurdy,state-code = <127>;
			 mgurdy,short-code = <128>;
			 mgurdy,long-code = <129>;
			 gpios = <&pio 7 18 GPIO_ACTIVE_LOW>; /* PH18 */
		 };

		 stringmod2 {
			 label = "String Mod2 BTN";
			 mgurdy,state-code = <124>;
			 mgurdy,short-code = <125>;
			 mgurdy,long-code = <126>;
			 gpios = <&pio 7 19 GPIO_ACTIVE_LOW>; /* PH19 */
		 };
	 };

	 mgurdy_keys@01c25000{
		 compatible = "mgurdy,keyboard";
		 reg = <0x01c25000 0x100>;
		 interrupts = <GIC_SPI 29 IRQ_TYPE_LEVEL_HIGH>;
		 #io-channel-cells = <1>;
		 pinctrl-names = "default";
		 pinctrl-0 = <&mgurdy_keys_pins_olimex_som_evb>;
		 mgurdy,num-keys = <24>;
		 mux-en-gpios = <&pio 3 11 GPIO_ACTIVE_LOW>;    /* PD11 */
		 mux-sel-gpios = <&pio 3 9 GPIO_ACTIVE_HIGH>,  /* PD9 */
			 <&pio 3 23 GPIO_ACTIVE_HIGH>,  /* PD23 */
			 <&pio 3 21 GPIO_ACTIVE_HIGH>;  /* PD21 */
	 };

};

&ahci {
	target-supply = <&reg_ahci_5v>;
	status = "okay";
};

&ehci0 {
	status = "okay";
};

&ehci1 {
	status = "okay";
};

&cpu0 {
	cpu-supply = <&reg_dcdc2>;
};

&codec {
	status = "okay";
};

&i2c0 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c0_pins_a>;
	status = "okay";

	axp209: pmic@34 {
		reg = <0x34>;
		interrupt-parent = <&nmi_intc>;
		interrupts = <0 IRQ_TYPE_LEVEL_LOW>;
	};

	ina219: ina219@40 {
		compatible = "ti,ina219";
		reg = <0x40>;
		shunt-resistor = <100000>;
	};
};

&i2c1 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_pins_a>;
	clock-frequency = <400000>;
	status = "okay";

	ssd1307: oled@3c {
		 compatible = "solomon,ssd1309fb-i2c";
		 pinctrl-names = "default";
		 pinctrl-0 = <&ssd1309fb_reset_pin>;
		 reg = <0x3c>;
		 reset-gpios = <&pio 7 27 GPIO_ACTIVE_HIGH>; /* PH27 */
		 reset-active-low;
		 solomon,page-offset = <0>;
		 solomon,segment-no-remap;
		 solomon,width = <128>;
		 solomon,height = <32>;
	 };
};

&lradc {
	vref-supply = <&reg_vcc3v0>;
	status = "okay";
};

&mmc0 {
	pinctrl-names = "default";
	pinctrl-0 = <&mmc0_pins_a>;
	vmmc-supply = <&reg_vcc3v3>;
	bus-width = <4>;
	cd-gpios = <&pio 7 1 GPIO_ACTIVE_HIGH>; /* PH1 */
	cd-inverted;
	status = "okay";
};

&ohci0 {
	status = "okay";
};

&ohci1 {
	status = "okay";
};

&otg_sram {
	status = "okay";
};

&pio {
	ahci_pwr_pin_olimex_som_evb: ahci_pwr_pin@1 {
		pins = "PC3";
		function = "gpio_out";
	};

	led_pins_olimex_som_evb: led_pins@0 {
		pins = "PH2", "PH24", "PH25", "PH26";
		function = "gpio_out";
		drive-strength = <20>;
	};

	mgurdy_keys_pins_olimex_som_evb: mgurdy_keys_pins@0 {
		pins = "PD9", "PD11", "PD21", "PD23";
		function = "gpio_out";
	};

	rotary_pins_olimex_som_evb: rotary_pins@0 {
		pins = "PH13", "PH14";
		function = "gpio_in";
	};

	gpio_btn_pins_olimex_som_evb: gpio_btn_pins@0 {
		pins = "PH8", "PH9", "PH10", "PH11", "PH12", "PH15", "PH16", "PH17", "PH18", "PH19";
		function = "gpio_in";
		bias-pull-up;
	};

	usb0_id_detect_pin: usb0_id_detect_pin@0 {
		pins = "PH4";
		function = "gpio_in";
	};

	usb0_vbus_detect_pin: usb0_vbus_detect_pin@0 {
		pins = "PH5";
		function = "gpio_in";
	};

	ssd1309fb_reset_pin: ssd1309fb_reset_pin@0 {
		pins = "PH27";
		function = "gpio_out";
	};
};

&reg_ahci_5v {
	pinctrl-0 = <&ahci_pwr_pin_olimex_som_evb>;
	gpio = <&pio 2 3 GPIO_ACTIVE_HIGH>;
	status = "okay";
};

#include "axp209.dtsi"

&reg_dcdc2 {
	regulator-always-on;
	regulator-min-microvolt = <1000000>;
	regulator-max-microvolt = <1400000>;
	regulator-name = "vdd-cpu";
};

&reg_dcdc3 {
	regulator-always-on;
	regulator-min-microvolt = <1000000>;
	regulator-max-microvolt = <1400000>;
	regulator-name = "vdd-int-dll";
};

&reg_ldo1 {
	regulator-name = "vdd-rtc";
};

&reg_ldo2 {
	regulator-always-on;
	regulator-min-microvolt = <3000000>;
	regulator-max-microvolt = <3000000>;
	regulator-name = "avcc";
};

&reg_usb0_vbus {
	status = "okay";
};

&reg_usb1_vbus {
	status = "okay";
};

&reg_usb2_vbus {
	status = "okay";
};

&spi1 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi1_pins_a>,
		    <&spi1_cs0_pins_a>;
	status = "okay";

	spi1_0 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "mlx90363";
		reg = <0>;
		spi-max-frequency = <2000000>;
	};
};

&spi2 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi2_pins_a>,
		    <&spi2_cs0_pins_a>;
	status = "okay";

	spi2_0 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "midigurdy,spidev";
		reg = <0>;
		spi-max-frequency = <50000000>;
	};
};

&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_pins_a>;
	status = "okay";
};

&usb_otg {
	dr_mode = "otg";
	status = "okay";
};

&usbphy {
	pinctrl-names = "default";
	pinctrl-0 = <&usb0_id_detect_pin>, <&usb0_vbus_detect_pin>;
	usb0_id_det-gpios = <&pio 7 4 GPIO_ACTIVE_HIGH>; /* PH04 */
	usb0_vbus_det-gpios = <&pio 7 5 GPIO_ACTIVE_HIGH>; /* PH05 */
	usb0_vbus-supply = <&reg_usb0_vbus>;
	usb1_vbus-supply = <&reg_usb1_vbus>;
	usb2_vbus-supply = <&reg_usb2_vbus>;
	status = "okay";
};

&usb_power_supply {
	status = "okay";
};

&ac_power_supply {
	status = "okay";
};

&battery_power_supply {
	status = "okay";
};
